<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1346.v180a_63f40267">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2144.v077a_d1928a_40"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2144.v077a_d1928a_40">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3787.v8f5dcd14a_fa_c">
    <script>pipeline {
    agent any
    
    environment {
        dockerImage = &apos;&apos;
        imageName = &apos;kjb95/my-base-image:1.0&apos;
        dockerHubId = &apos;docker-hub&apos;
    }
    
    stages {
        stage(&apos;Git Clone&apos;) {
            steps {
                git url: &apos;https://github.com/kjb95/movie-rank-chart&apos;, branch: &apos;main&apos;, credentialsId: &apos;kjb&apos;
            }
        }
        stage(&apos;Bulid Gradle&apos;) {
            steps {
                dir(&apos;backend&apos;) {
                    sh &apos;./gradlew build&apos;
                }
            }
        }
        stage(&apos;Build Docker&apos;) {
            steps {
                dir(&apos;test&apos;) {
                    script {
                        dockerImage = docker.build imageName
                    }
                }
            }
        }
        stage(&apos;Push Docker&apos;) {
            steps {
                script {
                    docker.withRegistry(&apos;&apos;, dockerHubId) {
                        dockerImage.push(&quot;1.0&quot;)
                    }
                }
            }
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>